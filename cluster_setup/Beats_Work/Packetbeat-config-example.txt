
CONFIGURE PACKETBEAT
Packetbeat needs to be configured to select the network interface from which to capture the traffic.

On Linux: Packetbeat supports capturing all messages sent or received by the server on which Packetbeat is installed. For this, use any as the device:

packetbeat.interfaces.device: any
On OS X, capturing from the any device does not work. You would typically use either lo0 or en0 depending on which traffic you want to capture.

On Windows, run the following command to list the available network interfaces:

PS C:\Program Files\Packetbeat> .\packetbeat.exe -devices

0: \Device\NPF_{113535AD-934A-452E-8D5F-3004797DE286} (Intel(R) PRO/1000 MT Desktop Adapter)
In this example, there is only one network card, with the index 0, installed on the system. If there are multiple network cards, remember the index of the device you want to use for capturing the traffic.

Modify the device line to point to the index of the device:

packetbeat.interfaces.device: 0
There's also a full example configuration file called packetbeat.full.yml that shows all the possible options.

STEP 4 - CONFIGURE PROTOCOLS
In the protocols section, configure the ports on which Packetbeat can find each protocol. If you use any non-standard ports, add them here. Otherwise, the default values should do just fine.

packetbeat.protocols.dns:
  ports: [53]

  include_authorities: true
  include_additionals: true

packetbeat.protocols.http:
  ports: [80, 8080, 8081, 5000, 8002]

packetbeat.protocols.memcache:
  ports: [11211]

packetbeat.protocols.mysql:
  ports: [3306]

packetbeat.protocols.pgsql:
  ports: [5432]

packetbeat.protocols.redis:
  ports: [6379]

packetbeat.protocols.thrift:
  ports: [9090]

packetbeat.protocols.mongodb:
  ports: [27017]

packetbeat.protocols.cassandra:
  ports: [9042]

STEP 5 - CONFIGURE OUTPUT
We'll be shipping to Logstash so that we have the option to run filters before the data is indexed.
Comment out the elasticsearch output block.

## Comment out elasticsearch output
#output.elasticsearch:
#  hosts: ["localhost:9200"]
Uncomment and change the logstash output to match below.

output.logstash:
    hosts: ["your-logstash-host:your-ssl-port"]
    loadbalance: true
    ssl.enabled: true

STEP 6 - VALIDATE CONFIGURATION
Let's check the configuration file is syntactically correct by running packetbeat directly inside the terminal. If the file is invalid, packetbeat will print an error loading config file error message with details on how to correct the problem.

deb/rpm

sudo packetbeat -e -c /etc/packetbeat/packetbeat.yml
macOS

cd <EXTRACTED_ARCHIVE>
./packetbeat -e -c packetbeat.yml
Windows

cd <EXTRACTED_ARCHIVE>
.\packetbeat.exe -e -c packetbeat.yml

STEP 7 - START PACKETBEAT
Ok, time to start ingesting data!

deb/rpm

sudo service packetbeat start
mac

./packetbeat -e
win

Start-Service packetbeat