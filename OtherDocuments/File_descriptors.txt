Setting ulimits
To get open file limit on any Linux server, execute the following command,

[root@ubuntu ~]# cat /proc/sys/fs/file-max
146013
The above number  shows that user can open ‘146013’ file per user login session.

[root@centos ~]# cat /proc/sys/fs/file-max
149219
[root@debian ~]# cat /proc/sys/fs/file-max
73906

This clearly indicates that individual Linux operating systems have different number of open files. 
This is based on dependencies and applications which are running in respective systems.

ulimit command :
As the name suggests, ulimit (user limit) is used to display and set resources limit for logged in user.
When we run ulimit command with -a option then  it will print all resources’ limit for the logged in user. 
Now let’s run “ulimit -a” on Ubuntu / Debian and CentOS systems,

Ubuntu / Debian System,

shashi@Ubuntu ~}$ ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 5731
max locked memory       (kbytes, -l) 64
max memory size         (kbytes, -m) unlimited
open files                      (-n) 1024      
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) 5731
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited

CentOS System

shashi@centos ~}$ ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 5901
max locked memory       (kbytes, -l) 64
max memory size         (kbytes, -m) unlimited
open files                      (-n) 1024
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) 5901
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited

To display the individual resource limit then pass the individual parameter in ulimit command, 
some of parameters are listed below:

ulimit -n  –> It will display number of open files limit
ulimit -c –> It display the size of core file
umilit -u –> It will display the maximum user process limit for the logged in user.
ulimit -f –> It will display the maximum file size that the user can have.
umilit -m –> It will display the maximum memory size for logged in user.
ulimit -v –> It will display the maximum memory size limit
Use below commands check hard and soft limits for number of open file for the logged in user

$ ulimit -Hn
1048576

ulimit -Sn
1024

Let’s assume our Linux server has reached the limit of maximum number of open files and want to 
extend that limit system wide, for example we want to set 100000 as limit of number of open files.

Use sysctl command to pass fs.file-max parameter to kernel on the fly, execute beneath command as root user,

root@ubuntu~]# sysctl -w fs.file-max=100000
fs.file-max = 100000

making permanent
root@ubuntu~]# vi /etc/sysctl.conf
fs.file-max = 100000

Run the beneath command to make above changes into effect immediately without logout and reboot.

root@ubuntu~]# sysctl -p

root@ubuntu~]# cat /proc/sys/fs/file-max
100000

Use below command to find out how many file descriptors are currently being utilized:

[root@ansible ~]# more /proc/sys/fs/file-nr
1216    0       100000

Set User level resource limit via limit.conf file

“/etc/sysctl.conf” file is used to set resource limit system wide but if you want to set resource limit for specific user like Oracle, 
MariaDB and Apache then this can be achieved via “/etc/security/limits.conf” file.

# hard limit for max opened files for linuxtechi user
user1       hard    nofile          4096
# soft limit for max opened files for linuxtechi user
user1       soft    nofile          1024

# hard limit for max number of process for oracle user
oracle           hard    nproc          8096
# soft limit for max number of process for oracle user
oracle           soft    nproc          4096

# hard limit for max opened files for sysadmin group
@sysadmin        hard         nofile            4096 
# soft limit for max opened files for sysadmin group
@sysadmin        soft         nofile            1024

