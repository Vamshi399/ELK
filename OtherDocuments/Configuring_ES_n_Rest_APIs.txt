Configuring ES:
In a running cluster:
Cluster update settings API can be used to Updates cluster-wide settings.

PUT /_cluster/settings

Updates to settings can be 
persistent:they apply across restarts, 
or transient: where they don’t survive a full cluster restart.

The order of precedence for cluster settings is:

transient cluster settings
persistent cluster settings
settings in the elasticsearch.yml configuration file.

It’s best to set all cluster-wide settings with the settings API 
and use the elasticsearch.yml file only for local configurations.

flat_settings
(Optional, boolean) If true, returns settings in flat format. Defaults to false.

include_defaults
(Optional, boolean) If true, returns all default cluster settings. Defaults to false.

master_timeout
(Optional, time units) Specifies the period of time to wait for a connection to the master node. 
If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.

timeout
(Optional, time units) Specifies the period of time to wait for a response. 
If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.

Persistent update:
PUT /_cluster/settings
{
  "persistent" : {
    "indices.recovery.max_bytes_per_sec" : "50mb"
  }
}

curl option:
curl -X PUT "localhost:9200/_cluster/settings?pretty" -H 'Content-Type: application/json' -d'
{
  "persistent" : {
    "indices.recovery.max_bytes_per_sec" : "50mb"
  }
}
'


Transient update:
PUT /_cluster/settings?flat_settings=true
{
  "transient" : {
    "indices.recovery.max_bytes_per_sec" : "20mb"
  }
}

curl option:
curl -X PUT "localhost:9200/_cluster/settings?flat_settings=true&pretty" -H 'Content-Type: application/json' -d'
{
  "transient" : {
    "indices.recovery.max_bytes_per_sec" : "20mb"
  }
}
'
Note**
You can reset persistent or transient settings by assigning a null value. 
If a transient setting is reset, the first one of these values that is defined is applied:

the persistent setting
the setting in the configuration file
the default value.

For ex:
PUT /_cluster/settings
{
  "transient" : {
    "indices.recovery.max_bytes_per_sec" : null
  }
}

curl option:
curl -X PUT "localhost:9200/_cluster/settings?pretty" -H 'Content-Type: application/json' -d'
{
  "transient" : {
    "indices.recovery.max_bytes_per_sec" : null
  }
}
'
Response:
{
  ...
  "persistent" : {},
  "transient" : {}
}

=====================

REST APIs
Elasticsearch exposes REST APIs that are used by the UI components and can be called directly to configure and access Elasticsearch features.

Available APIs
API conventions
cat APIs
Cluster APIs
Cross-cluster replication APIs
Document APIs
Enrich APIs
Graph Explore API
Index APIs
Index lifecycle management APIs
Ingest APIs
Info API
Licensing APIs
Machine learning anomaly detection APIs
Machine learning data frame analytics APIs
Migration APIs
Reload Search Analyzers API
Rollup APIs
Search APIs
Security APIs
Snapshot and restore APIs
Snapshot lifecycle management APIs
Transform APIs
Usage API
Watcher APIs
--------------------

For example:

Node feature usage API:
GET /_nodes/usage

GET /_nodes/<node_id>/usage

GET /_nodes/usage/<metric>

GET /_nodes/<node_id>/usage/<metric>

The cluster nodes usage API allows you to retrieve information on the usage of features for each node.

reference link:
https://www.elastic.co/guide/en/elasticsearch/reference/7.8/cluster-nodes-usage.html

=====================
Nodes hot threads API
Returns the hot threads on each selected node in the cluster.

GET /_nodes/hot_threads

GET /_nodes/<node_id>/hot_threads

reference link:
https://www.elastic.co/guide/en/elasticsearch/reference/7.8/cluster-nodes-hot-threads.html
======================
